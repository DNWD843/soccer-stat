{"version":3,"sources":["configs/configForComponents.js","utils/routesMap.js","components/Navigation/Navigation.js","components/Menu/Menu.js","components/Header/Header.js","components/Footer/Footer.js","images/soccer-ball.svg","components/Card/Card.js","hooks/useFormWithValidation.js","components/CardsList/CardsList.js","components/TeamCalendarTableStroke/TeamCalendarTableStroke.js","components/TeamCalendarTable/TeamCalendarTable.js","components/SetDatePeriodForm/SetDatePeriodForm.js","components/TeamCalendar/TeamCalendar.js","components/CompetitionCalendarTableStroke/CompetitionCalendarTableStroke.js","components/CompetitionCalendarTable/CompetitionCalendarTable.js","components/CompetitionCalendar/CompetitionCalendar.js","components/PageNotFound/PageNotFound.js","components/Preloader/Preloader.js","components/InfoTooltip/InfoTooltip.js","components/ErrorTooltip/ErrorTooltip.js","utils/endpoints.js","configs/index.js","utils/Api.js","components/EmptyDataTooltip/EmptyDataTooltip.js","components/App/App.js","index.js"],"names":["forFooter","forHeader","forNavigation","forPageNotFound","forTeamCalendar","forTeamCalendarTable","forCompetitionCalendar","forCompetitionCalendarTable","forCardsList","forPreloader","forSetDatePeriodForm","forInfoTooltip","MAIN","COMPETITIONS","TEAMS","SEASON","MONTH","PERIOD","Navigation","isMobile","COMPETITIONS_LINK_TEXT","config","TEAMS_LINK_TEXT","navbarClassName","classNames","navbar_mobile","navLinksListClassName","navbar__links_mobile","activeLinkClassName","navbar__link_active","linkToSavedNewsPageClassName","navbar__link_mobile","navbar__link_color_grey","className","to","activeClassName","Menu","isMobileMenuOpened","menuClassName","menu_mobile","menu_desktop","menu_opened","Header","onMenuButtonClick","onOverlayClick","HEADER_LOGO_TEXT","headerContainerClassName","header__container_mobile","headerMobileMenuButtonClassName","headerMobileMenuOverlayClassName","type","onClick","Footer","COPYRIGHT_TEXT","NAV_LINK_TEXT","OUTER_LINK_TEXT","OUTER_LINK","SOCIAL_LINK_GITHUB","href","target","rel","Card","id","title","country","image","handleSelectOfCard","handleClick","useCallback","name","style","backgroundImage","pathToDefaultImage","useFormWithValidation","useState","values","setValues","errors","setErrors","isFormValid","setIsFormValid","isInputChecked","setIsInputChecked","isInputValid","setIsInputValid","formError","setFormError","resetForm","newValues","newErrors","newIsFormValid","newIsInputChecked","newIsInputValid","handleInputChange","event","value","validationMessage","closest","checkValidity","CardsList","cardsList","handleSubmitSearchForm","SELECT_INPUT_DEFAULT_OPTION_TEXT","INPUT_PLACEHOLDER_TEXT","FORM_SUBMIT_BUTTON_TEXT","selectInput","useRef","query","handleChangeOptionOnSelectInput","current","handleSubmit","evt","preventDefault","searchResult","find","card","toLowerCase","includes","useEffect","onChange","ref","undefined","map","onSubmit","placeholder","disabled","area","TeamCalendarTableStroke","match","selectedTeamId","date","Date","utcDate","toLocaleString","slice","time","toLocaleTimeString","competition","homeTeam","awayTeam","score","fullTime","winner","status","TeamCalendarTable","teamCalendarData","DATE","COMPETITION","OPPONENT","SCORE","WINNER","STATUS","colSpan","SetDatePeriodForm","handleSubmitSetDatePeriodForm","LABEL_DATE_FROM","PLACEHOLDER_DATE_FROM","LABEL_DATE_TO","PLACEHOLDER_DATE_TO","SUBMIT_BUTTON_TEXT","FORM_TITLE_TEXT","dateFrom","dateTo","handleFormSubmit","formattedDateFrom","split","reverse","join","formattedDateTo","required","TeamCalendar","getData","teamInfo","useParams","dateFromId","dateToId","TITLE","BACK_TO_TEAMS_LIST_LINK_TEXT","src","crestUrl","alt","CompetitionCalendarTableStroke","group","CompetitionCalendarTable","competitionInfo","calendarData","seasonId","monthId","HOMETEAM","AWAYTEAM","GROUP","currentSeason","matches","CompetitionCalendar","handleChangeSeason","handleChangeMonth","seasonSelectInput","monthSelectInput","BACK_TO_COMPETITIONS_LIST_LINK_TEXT","MONTHS_LIST","SEASON_OPTION_TEXT","MONTH_OPTION_TEXT","competitionCalendarImageClassName","emblemUrl","handleChangeSeasonSelectInputOption","selectedSeason","seasons","season","startDate","handleChangeMonthSelectInputOption","selectedMonth","pathToBallImage","endDate","Object","keys","calendarDataKey","index","PageNotFound","DESCRIPTION","ERROR_STATUS","LINK_TEXT","Preloader","InfoTooltip","isOpened","onClose","errorTitle","errorSubtitle","infoTooltipOverlayClassName","ErrorTooltip","isErrorTooltipOpened","isServerErrorTooltipOpened","ERROR_TITLE","ERROR_SUBTITLE","SERVER_ERROR_TITLE","SERVER_ERROR_SUBTITLE","MATCHES","API_URL","API_KEY","getTeamInfo","teamId","fetch","PATH_TO","method","headers","then","res","ok","json","Promise","reject","statusText","getCompetitionInfo","competitionId","toString","startsWith","EmptyDataTooltip","isEmptyDataTooltipOpened","hasNoMatchesTooltipOpened","EMPTY_DATA_TITLE","EMPTY_DATA_SUBTITLE","NO_MATCHES_PLANED_TITLE","NO_MATCHES_PLANED_SUBTITLE","App","history","useHistory","competitionsList","setCompetitionsList","teamsList","setTeamsList","setCalendarData","setCompetitionInfo","setTeamCalendarData","setTeamInfo","isLoading","setIsLoading","setIsErrorTooltipOpened","setIsServerErrorTooltipOpened","setIsEmptyDataTooltipOpened","setHasNoMatchesTooltipOpened","setIsMobileMenuOpened","closeAllPopups","callback","document","removeEventListener","handleEscClose","key","handleClickOnOverlay","currentTarget","getFullData","all","competitionsData","teamsData","console","log","competitionsArray","competitions","filter","plan","ensignUrl","currentSeasonMonth","getMonth","teamsArray","teams","team","catch","err","addEventListener","finally","handleClickOnCompetitionCard","selectedCompetition","push","location","pathname","handleClickOnTeamCard","getCompetitionDataBySeasonId","seasonStartDate","data","info","matchesSortedByMonths","reduce","acc","matchDate","getCompetitionDataByDatePeriod","length","getTeamData","getTeamDataByDatePeriod","handleSubmitSearchFormOnCompetitionsList","obtainedCard","handleSubmitSearchFormOnTeamsList","handleClickOnMenuButton","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d05de0be.chunk.js","sourcesContent":["export const forFooter = {\n  COPYRIGHT_TEXT: '© 2021 Dmitry Neklyudov, Powered by Football-Data API',\n  NAV_LINK_TEXT: 'Главная',\n  OUTER_LINK_TEXT: 'Football-Data API',\n  OUTER_LINK: 'https://www.football-data.org',\n  SOCIAL_LINK_GITHUB: 'https://github.com/DNWD843',\n};\n\nexport const forHeader = {\n  HEADER_LOGO_TEXT: 'SoccerStat',\n};\n\nexport const forNavigation = {\n  COMPETITIONS_LINK_TEXT: 'Турниры',\n  TEAMS_LINK_TEXT: 'Команды',\n  COMPETITION_CALENDAR_LINK_TEXT: 'Календарь лиги',\n  TEAM_CALENDAR_LINK_TEXT: 'Календарь команды',\n};\n\nexport const forNewsCard = {\n  ALT_TEXT: 'изображение к статье',\n  TOOLTIP_MAIN_PAGE_NOT_LOGGED_IN: 'Войдите, чтобы сохранять статьи',\n  TOOLTIP_SAVED_NEWS: 'Убрать из сохранённых',\n  TOOLTIP_MAIN_PAGE_TO_SAVE: 'Сохранить',\n  TOOLTIP_MAIN_PAGE_TO_DELETE: 'Отменить сохранение',\n};\n\nexport const forMenu = {\n  BUTTON_IMAGE_ALT: 'иконка кнопки выйти',\n  AUTHORIZATION_TITLE: 'Авторизоваться',\n};\n\nexport const forPageNotFound = {\n  ERROR_STATUS: '404',\n  TITLE: 'Страница не найдена',\n  DESCRIPTION: 'Ой! Кажется, такой страницы не существует.',\n  LINK_TEXT: 'На главную',\n};\n\nexport const forTeamCalendar = {\n  TITLE: 'Календарь игр',\n  BACK_TO_TEAMS_LIST_LINK_TEXT: 'Вернуться к списку команд',\n};\n\nexport const forTeamCalendarTable = {\n  DATE: 'Дата',\n  COMPETITION: 'Турнир',\n  OPPONENT: 'Соперник',\n  SCORE: 'Счет',\n  WINNER: 'Победитель',\n  STATUS: 'Статус',\n  YEAR: 'Год: ',\n};\n\nexport const forCompetitionCalendar = {\n  TITLE: 'Календарь игр',\n  BACK_TO_COMPETITIONS_LIST_LINK_TEXT: 'Вернуться к списку турниров',\n  SEASON: 'Сезон: ',\n  MONTH: 'Месяц: ',\n  MONTHS_LIST: [\n    'Январь',\n    'Февраль',\n    'Март',\n    'Апрель',\n    'Май',\n    'Июнь',\n    'Июль',\n    'Август',\n    'Сентябрь',\n    'Октябрь',\n    'Ноябрь',\n    'Декабрь',\n  ],\n  SEASON_OPTION_TEXT: 'Выбрать сезон',\n  MONTH_OPTION_TEXT: 'Месяц',\n};\n\nexport const forCompetitionCalendarTable = {\n  DATE: 'Дата',\n  HOMETEAM: 'Хозяева',\n  SCORE: 'Счет',\n  AWAYTEAM: 'Гости',\n  GROUP: 'Группа',\n  STATUS: 'Статус',\n};\n\nexport const forCardsList = {\n  SELECT_INPUT_DEFAULT_OPTION_TEXT: 'Выбрать из списка:',\n  INPUT_PLACEHOLDER_TEXT: 'Введите название или его часть',\n  FORM_SUBMIT_BUTTON_TEXT: 'Найти',\n};\n\nexport const forPreloader = {\n  TITLE: 'Идет загрузка...',\n};\n\nexport const forSetDatePeriodForm = {\n  LABEL_DATE_FROM: 'Дата с',\n  PLACEHOLDER_DATE_FROM: 'в формате ДД.ММ.ГГГГ',\n  LABEL_DATE_TO: 'Дата по',\n  PLACEHOLDER_DATE_TO: 'в формате ДД.ММ.ГГГГ',\n  SUBMIT_BUTTON_TEXT: 'Показать',\n  FORM_TITLE_TEXT: 'Выберите период:',\n};\n\nexport const forInfoTooltip = {\n  ERROR_TITLE: 'Что-то пошло не так!',\n  ERROR_SUBTITLE: 'Измените параметры запроса и попробуйте еще раз.',\n  SERVER_ERROR_TITLE: 'Сервер не отвечает!',\n  SERVER_ERROR_SUBTITLE: 'Попробуйте позже.',\n  EMPTY_DATA_TITLE: 'В указанный период матчей не найдено!',\n  EMPTY_DATA_SUBTITLE: 'Измените параметры запроса и попробуйте еще раз.',\n  NO_MATCHES_PLANED_TITLE: 'Матчи не запланированы.',\n  NO_MATCHES_PLANED_SUBTITLE: '',\n};\n","/**\n * Роуты\n * @ignore\n */\n\nexport const MAIN = '/soccer-stat';\n\nexport const COMPETITIONS = '/competitions';\n\nexport const TEAMS = '/teams';\n\nexport const SEASON = '/season';\n\nexport const MONTH = '/month';\n\nexport const PERIOD = '/period';\n\nexport const ANY_ROUTE = '*';\n","import { forNavigation as config } from '../../configs/configForComponents';\nimport { NavLink } from 'react-router-dom';\nimport { COMPETITIONS, TEAMS } from '../../utils/routesMap';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './Navigation.css';\n\n/**\n * @module Navigation\n * @description Блок навигации по сайту.\n * @property {Boolean} isMobile -стейт состояния меню - мобильное (на мобильном разрешении)\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction Navigation({ isMobile }) {\n  const { COMPETITIONS_LINK_TEXT, TEAMS_LINK_TEXT } = config;\n\n  const navbarClassName = classNames('navbar', {\n    navbar_mobile: isMobile,\n  });\n\n  const navLinksListClassName = classNames('navbar__links', {\n    navbar__links_mobile: isMobile,\n  });\n\n  const activeLinkClassName = classNames({\n    navbar__link_active: !isMobile,\n    '': isMobile,\n  });\n\n  const linkToSavedNewsPageClassName = classNames('navbar__link', {\n    navbar__link_mobile: isMobile,\n    navbar__link_color_grey: !isMobile,\n  });\n\n  return (\n    <nav className={navbarClassName}>\n      <ul className={navLinksListClassName}>\n        <li className=\"navbar__item\">\n          <NavLink\n            to={COMPETITIONS}\n            className={linkToSavedNewsPageClassName}\n            activeClassName={activeLinkClassName}\n          >\n            {COMPETITIONS_LINK_TEXT}\n          </NavLink>\n        </li>\n        <li className={navLinksListClassName}>\n          <NavLink\n            to={TEAMS}\n            className={linkToSavedNewsPageClassName}\n            activeClassName={activeLinkClassName}\n          >\n            {TEAMS_LINK_TEXT}\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nNavigation.propTypes = {\n  isMobile: PropTypes.bool.isRequired,\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Navigation from '../Navigation/Navigation';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './Menu.css';\n\n/**\n * @module Menu\n * @description Меню, блок содержит меню навигации по сайту и кнопку меню на мобильном разрешении.<br>\n * @property {Boolean} isMobile -стейт состояния меню - мобильное (на мобильном разрешении)\n * @property {Boolean} isMobileMenuOpened - стейт открытого состояния мобильного меню\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction Menu({ isMobile, isMobileMenuOpened }) {\n  const menuClassName = classNames('menu', {\n    menu_mobile: isMobile,\n    menu_desktop: !isMobile,\n    menu_opened: isMobileMenuOpened,\n  });\n\n  return (\n    <div className={menuClassName}>\n      <Navigation isMobile={isMobile} />\n    </div>\n  );\n}\n\nMenu.propTypes = {\n  isMobile: PropTypes.bool.isRequired,\n  isMobileMenuOpened: PropTypes.bool.isRequired,\n};\n\nexport default Menu;\n","import Menu from '../Menu/Menu';\nimport classNames from 'classnames';\nimport { forHeader as config } from '../../configs/configForComponents';\nimport PropTypes from 'prop-types';\nimport './Header.css';\n\n/**\n * @module Header\n * @description Хэдер, блок содержит логотип и меню навигации по сайту.<br>\n * @property {Function} onMenuButtonClick - колбэк, открывает скрытое меню на мобильном разрешении\n * @property {Boolean} isMobileMenuOpened - стейт открытого состояния мобильного меню\n * @property {Function} onOverlayClick - колбэк, закрывает попапы при клике по оверлею\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction Header({ onMenuButtonClick, isMobileMenuOpened, onOverlayClick }) {\n  const { HEADER_LOGO_TEXT } = config;\n\n  const headerContainerClassName = classNames('header__container', {\n    header__container_mobile: isMobileMenuOpened,\n  });\n\n  const headerMobileMenuButtonClassName = classNames('header__menu-button', {\n    'header__menu-button_not-pressed': !isMobileMenuOpened,\n    'header__menu-button_pressed': isMobileMenuOpened,\n  });\n\n  const headerMobileMenuOverlayClassName = classNames('overlay', {\n    'header__menu-mobile-overlay': isMobileMenuOpened,\n  });\n\n  return (\n    <header className=\"header\">\n      <div className={headerContainerClassName}>\n        <p className=\"header__logo\">{HEADER_LOGO_TEXT}</p>\n        <Menu isMobile={false} isMobileMenuOpened={isMobileMenuOpened} />\n        <button\n          type=\"button\"\n          onClick={onMenuButtonClick}\n          className={headerMobileMenuButtonClassName}\n        />\n      </div>\n      <div className={headerMobileMenuOverlayClassName} onClick={onOverlayClick}>\n        <Menu isMobile={true} isMobileMenuOpened={isMobileMenuOpened} />\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  onMenuButtonClick: PropTypes.func.isRequired,\n  isMobileMenuOpened: PropTypes.bool.isRequired,\n  onOverlayClick: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import { Link } from 'react-router-dom';\nimport { MAIN } from '../../utils/routesMap';\nimport { forFooter as config } from '../../configs/configForComponents';\nimport './Footer.css';\n\n/**\n * @module Footer\n * @description Футер, блок с навигационными и информационными ссылками.<br>\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction Footer() {\n  const { COPYRIGHT_TEXT, NAV_LINK_TEXT, OUTER_LINK_TEXT, OUTER_LINK, SOCIAL_LINK_GITHUB } = config;\n  return (\n    <>\n      <footer className=\"footer\">\n        <p className=\"footer__copyright\">{COPYRIGHT_TEXT}</p>\n        <nav className=\"footer__menu\">\n          <ul className=\"footer__links\">\n            <li className=\"footer__links-item\">\n              <Link to={MAIN} className=\"footer__link\">\n                {NAV_LINK_TEXT}\n              </Link>\n            </li>\n            <li className=\"footer__links-item\">\n              <a\n                href={OUTER_LINK}\n                className=\"footer__link\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {OUTER_LINK_TEXT}\n              </a>\n            </li>\n          </ul>\n          <ul className=\"footer__social\">\n            <li className=\"footer__social-item\">\n              <a\n                href={SOCIAL_LINK_GITHUB}\n                className=\"footer__social-link\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <div className=\"footer__social-icon footer__social-icon_type_github\"></div>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/soccer-ball.37a730ea.svg\";","import pathToDefaultImage from '../../images/soccer-ball.svg';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport './Card.css';\n\n/**\n * @module Card\n * @description Карточка с информацией о турнире или команде\n * @param {Object} card - объект с данными турнира или команды\n * @property {Number} card.id - id турнира или команды\n * @property {String} card.title - название турнира или команды\n * @property {Object} card.country - страна турнира или команды\n * @property {String} card.image - URL изображения: для турнира - флаг страны, для команды - эмблема команды\n * @param {Function} handleSelectOfCard - колбэк, обработчик выбора карточки\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction Card({ id, title, country, image, handleSelectOfCard }) {\n  /**\n   * @method handleClick\n   * @description Обработчик клика по карточке.\n   * @public\n   * @since v.1.0.0\n   */\n  const handleClick = useCallback(() => {\n    handleSelectOfCard(id);\n  }, [handleSelectOfCard, id]);\n\n  return (\n    <li onClick={handleClick} className=\"card cards__item\">\n      <div className=\"card__info\">\n        <h2 className=\"card__title\">{title}</h2>\n        <span className=\"card__subtitle\">{country.name}</span>\n      </div>\n      <div\n        className=\"card__image\"\n        style={{\n          backgroundImage: image ? `url(${image})` : `url(${pathToDefaultImage})`,\n        }}\n      ></div>\n    </li>\n  );\n}\n\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  country: PropTypes.object.isRequired,\n  image: PropTypes.string,\n  handleSelectOfCard: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import { useCallback, useState } from 'react';\n\n/**\n * @module useFormWithValidation\n * @description Пользовательский хук.<br>\n * Запускает валидацию формы, с которой используется. Для запуска валидации, хук\n *  импортируется в компонент с формой и запускается. Хук выполняет валидацию и вывод ошибок\n *  используя браузерную валидацию, т.е. свойство validity объекта ValidityState.<br>\n * Особеннсти хука:<br>\n * - используются управляемые инпуты;<br>\n * - каждый инпут валидируется отдельно, что позволяет стилизовать каждый инпут в зависимости\n *  от его состояния<br>\n * - проверяется валидность всей формы в целом, если не валиден хотя бы один инпут - вся форма не валидна<br>\n * - заполняемый инпут получает состояние \"выбранный\", что позволяет отдельно стилизовать инпут, в котором\n *  происходит заполнение поля<br>\n * Возвращает объект со стейтами и методами.\n * @returns {Object}  { values, errors, isValid, handleInputChange, setValues, resetForm }\n * @since v.1.0.0\n * @public\n */\nexport function useFormWithValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [isInputChecked, setIsInputChecked] = useState({});\n  const [isInputValid, setIsInputValid] = useState({});\n  const [formError, setFormError] = useState('');\n\n  /**\n   * @method\n   * @name handleInputChange\n   * @argument {Event} event - событие\n   * @description Обработчик изменения полей инпутов.<br> При каждом вводе в поле инпута введенное значение\n   *  и результаты валидации введенных значений и формы в целом сохраняются в соответствующие стейты.\n   * @public\n   * @since v.1.0.0\n   */\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setValues({ ...values, [name]: value });\n    setErrors({ ...errors, [name]: event.target.validationMessage });\n    setIsFormValid(event.target.closest('form').checkValidity());\n    setIsInputChecked({ ...isInputChecked, [name]: true });\n    setIsInputValid({ ...isInputValid, [name]: event.target.checkValidity() });\n  };\n\n  /**\n   * @method\n   * @name resetForm\n   * @description Сброс формы после ввода значений<br> Если после ввода значений в форму новые значения не были\n   * отправлены, форма приводится в изначальное актуальное состояние установкой стейтов в необходимые состояния.\n   *  Состояния стейтов передаются аргументами коллбэку метода resetForm.\n   * @public\n   * @since v.1.0.0\n   */\n  const resetForm = useCallback(\n    (\n      newValues = {},\n      newErrors = {},\n      newIsFormValid = false,\n      newIsInputChecked = {},\n      newIsInputValid = {},\n    ) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsFormValid(newIsFormValid);\n      setIsInputChecked(newIsInputChecked);\n      setIsInputValid(newIsInputValid);\n      setFormError('');\n    },\n    [setValues, setErrors, setIsFormValid, setIsInputChecked, setIsInputValid],\n  );\n\n  return {\n    values,\n    errors,\n    isFormValid,\n    isInputChecked,\n    isInputValid,\n    handleInputChange,\n    setValues,\n    resetForm,\n    formError,\n    setFormError,\n  };\n}\n","import Card from '../Card/Card';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { forCardsList as config } from '../../configs/configForComponents';\nimport { useFormWithValidation } from '../../hooks/useFormWithValidation';\nimport PropTypes from 'prop-types';\nimport './CardsList.css';\n\n/**\n * @module CardsList\n * @description Список карточек с информацией о турнирах или командах\n * @param {Array} cardsList - массив данных о турнирах или командах для отображения карточек\n * @param {Function} handleSelectOfCard - колбэк, обработчик клика по карточке\n * @param {Function} handleSubmitSearchForm - колбэк, обработчик сабмита формы поиска по названию\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction CardsList({ cardsList, handleSelectOfCard, handleSubmitSearchForm }) {\n  const {\n    SELECT_INPUT_DEFAULT_OPTION_TEXT,\n    INPUT_PLACEHOLDER_TEXT,\n    FORM_SUBMIT_BUTTON_TEXT,\n  } = config;\n  const selectInput = useRef(null);\n\n  const { values, handleInputChange, resetForm } = useFormWithValidation();\n  const { query } = values;\n\n  /**\n   * @method handleChangeOptionOnSelectInput\n   * @description Обработчик выбора пункта меню из выпадающего списка.\n   * @public\n   * @since v.1.0.0\n   */\n  const handleChangeOptionOnSelectInput = useCallback(() => {\n    handleSelectOfCard(+selectInput.current.value);\n  }, [handleSelectOfCard]);\n\n  /**\n   * @method handleSubmit\n   * @description Обработчик сабмита формы поиска по названию.\n   * @param {Event} evt - событие\n   * @public\n   * @since v.1.0.0\n   */\n  const handleSubmit = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      const searchResult = cardsList.find((card) =>\n        card.name.toLowerCase().includes(query.toLowerCase()),\n      );\n      handleSubmitSearchForm(searchResult);\n    },\n    [query, cardsList, handleSubmitSearchForm],\n  );\n\n  useEffect(() => {\n    resetForm();\n  }, [resetForm]);\n\n  return (\n    <section className=\"cards-list content__cards\">\n      <div className=\"cards-list__info\">\n        <select\n          onChange={handleChangeOptionOnSelectInput}\n          ref={selectInput}\n          value={undefined}\n          className=\"cards-list__content-select\"\n        >\n          <option key={1} value={undefined}>\n            {SELECT_INPUT_DEFAULT_OPTION_TEXT}\n          </option>\n          {cardsList.map(({ id, name }) => (\n            <option key={id} value={id}>\n              {name}\n            </option>\n          ))}\n        </select>\n        <form onSubmit={handleSubmit} className=\"search-form content__search-form\">\n          <div className=\"search-form__form-field\">\n            <input\n              type=\"text\"\n              className=\"search-form__input\"\n              name=\"query\"\n              placeholder={INPUT_PLACEHOLDER_TEXT}\n              value={query || ''}\n              onChange={handleInputChange}\n            ></input>\n          </div>\n          <button type=\"submit\" className=\"search-form__submit\" disabled={!query}>\n            {FORM_SUBMIT_BUTTON_TEXT}\n          </button>\n        </form>\n      </div>\n\n      <ul className=\"cards content__elements\">\n        {cardsList.map(({ id, name, area, image }) => (\n          <Card\n            key={id}\n            id={id}\n            title={name}\n            country={area}\n            image={image}\n            handleSelectOfCard={handleSelectOfCard}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nCardsList.propTypes = {\n  cardsList: PropTypes.array.isRequired,\n  handleSelectOfCard: PropTypes.func.isRequired,\n  handleSubmitSearchForm: PropTypes.func.isRequired,\n};\nexport default CardsList;\n","import PropTypes from 'prop-types';\nimport './TeamCalendarTableStroke.css';\n\n/**\n * @module TeamCalendarTableStroke\n * @description Строка таблицы календаря матчей команды\n * @param {Object} match - объект с данными матча команды\n * @param {Number} selectedTeamId - id команды\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction TeamCalendarTableStroke({ match, selectedTeamId }) {\n  const date = new Date(match.utcDate).toLocaleString().slice(0, 10);\n  const time = new Date(match.utcDate).toLocaleTimeString().slice(0, 5);\n\n  return (\n    <>\n      <tr className=\"team-calendar-table__stroke\">\n        <td className=\"team-calendar-table__cell team-calendar-table__cell_size_100\">\n          <span className=\"stroke__date\">{date}</span>\n        </td>\n        <td className=\"team-calendar-table__cell team-calendar-table__cell_size_60\">\n          <span className=\"stroke__time\">{time}</span>\n        </td>\n        <td className=\"team-calendar-table__cell team-calendar-table__cell_size_220\">\n          <span className=\"stroke__competition\">\n            {`${match.competition.name}. ${match.competition.area.name}`}\n          </span>\n        </td>\n        <td className=\"team-calendar-table__cell team-calendar-table__cell_size_220\">\n          <span className=\"stroke__opponent\">\n            {match.homeTeam.id === +selectedTeamId ? match.awayTeam.name : match.homeTeam.name}\n          </span>\n        </td>\n        <td className=\"team-calendar-table__cell team-calendar-table__cell_size_50\">\n          <span className=\"stroke__score\">\n            {`${\n              match.score.fullTime.homeTeam !== null ? match.score.fullTime.homeTeam : ' -- '\n            } : ${match.score.fullTime.awayTeam !== null ? match.score.fullTime.awayTeam : ' -- '}`}\n          </span>\n        </td>\n        <td className=\"team-calendar-table__cell team-calendar-table__cell_size_220\">\n          <span className=\"stroke__winner\">\n            {!match.score.winner\n              ? ''\n              : match.score.winner === 'DRAW'\n              ? match.score.winner\n              : match.score.winner === 'HOME_TEAM'\n              ? match.homeTeam.name\n              : match.awayTeam.name}\n          </span>\n        </td>\n        <td className=\"team-calendar-table__cell team-calendar-table__cell_size_135\">\n          <span className=\"stroke__status\">{match.status}</span>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nTeamCalendarTableStroke.propTypes = {\n  match: PropTypes.object.isRequired,\n  selectedTeamId: PropTypes.string.isRequired,\n};\n\nexport default TeamCalendarTableStroke;\n","import { forTeamCalendarTable as config } from '../../configs/configForComponents';\nimport TeamCalendarTableStroke from '../TeamCalendarTableStroke/TeamCalendarTableStroke';\nimport PropTypes from 'prop-types';\nimport './TeamCalendarTable.css';\n\n/**\n * @module TeamCalendarTable\n * @description Таблица календаря матчей команды\n * @param {Array} teamCalendarData - данные матчей команды для календаря\n * @param {String} id - id команды\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction TeamCalendarTable({ teamCalendarData, id }) {\n  const { DATE, COMPETITION, OPPONENT, SCORE, WINNER, STATUS } = config;\n  return (\n    <table className=\"team-calendar-table\">\n      <thead className=\"table-head team-calendar-table__header\">\n        <tr>\n          <th className=\"table-head__cell\" colSpan=\"2\">\n            <span className=\"table-head__date\">{DATE}</span>\n          </th>\n          <th className=\"table-head__cell\">\n            <span className=\"table-head__competition\">{COMPETITION}</span>\n          </th>\n          <th className=\"table-head__cell\">\n            <span className=\"table-head__opponent\">{OPPONENT}</span>\n          </th>\n          <th className=\"table-head__cell\">\n            <span className=\"table-head__score\">{SCORE}</span>\n          </th>\n          <th className=\"table-head__cell\">\n            <span className=\"table-head__winner\">{WINNER}</span>\n          </th>\n          <th className=\"table-head__cell\">\n            <span className=\"table-head__status\">{STATUS}</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {teamCalendarData.map((match) => (\n          <TeamCalendarTableStroke key={match.id} match={match} selectedTeamId={id} />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTeamCalendarTable.propTypes = {\n  teamCalendarData: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default TeamCalendarTable;\n","import { useCallback, useEffect } from 'react';\nimport { forSetDatePeriodForm as config } from '../../configs/configForComponents';\nimport { useFormWithValidation } from '../../hooks/useFormWithValidation';\nimport PropTypes from 'prop-types';\nimport './SetDatePeriodForm.css';\n\n/**\n * @module SetDatePeriodForm\n * @description Форма поиска матчей по диапазону дат.\n * @param {Function} handleSubmitSetDatePeriodForm - колбэк, обработчик сабмита формы задания диапазона дат\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction SetDatePeriodForm({ handleSubmitSetDatePeriodForm }) {\n  const {\n    LABEL_DATE_FROM,\n    PLACEHOLDER_DATE_FROM,\n    LABEL_DATE_TO,\n    PLACEHOLDER_DATE_TO,\n    SUBMIT_BUTTON_TEXT,\n    FORM_TITLE_TEXT,\n  } = config;\n\n  const { values, resetForm, isFormValid, handleInputChange, errors } = useFormWithValidation();\n  const { dateFrom, dateTo } = values;\n\n  /**\n   * @method handleFormSubmit\n   * @description Обработчик сабмита формы задания диапазона дат.\n   * @param {Event} evt - событие\n   * @public\n   * @since v.1.0.0\n   */\n  const handleFormSubmit = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      const formattedDateFrom = dateFrom.split('.').reverse().join('-');\n      const formattedDateTo = dateTo.split('.').reverse().join('-');\n      handleSubmitSetDatePeriodForm(formattedDateFrom, formattedDateTo);\n      resetForm();\n    },\n    [resetForm, handleSubmitSetDatePeriodForm, dateFrom, dateTo],\n  );\n\n  useEffect(() => {\n    resetForm();\n  }, [resetForm]);\n\n  return (\n    <form onSubmit={handleFormSubmit} className=\"form content-calendar__form\">\n      <h2 className=\"form__title\">{FORM_TITLE_TEXT}</h2>\n      <div className=\"form__field\">\n        <label className=\"form__label\">{LABEL_DATE_FROM}</label>\n        <input\n          type=\"text\"\n          id=\"dateFrom\"\n          name=\"dateFrom\"\n          value={dateFrom || ''}\n          onChange={handleInputChange}\n          className=\"form__input\"\n          placeholder={PLACEHOLDER_DATE_FROM}\n          required\n        ></input>\n        <span className=\"form__input-error\" id=\"dateFrom-input-error\">\n          {errors.dateFrom || ''}\n        </span>\n      </div>\n      <div className=\"form__field\">\n        <label className=\"form__label\">{LABEL_DATE_TO}</label>\n        <input\n          type=\"text\"\n          id=\"dateTo\"\n          name=\"dateTo\"\n          value={dateTo || ''}\n          onChange={handleInputChange}\n          className=\"form__input\"\n          placeholder={PLACEHOLDER_DATE_TO}\n          required\n        ></input>\n        <span className=\"form__input-error\" id=\"dateTo-input-error\">\n          {errors.dateTo || ''}\n        </span>\n      </div>\n      <button className=\"form__submit-button\" type=\"submit\" disabled={!isFormValid}>\n        {SUBMIT_BUTTON_TEXT}\n      </button>\n    </form>\n  );\n}\n\nSetDatePeriodForm.propTypes = {\n  handleSubmitSetDatePeriodForm: PropTypes.func.isRequired,\n};\n\nexport default SetDatePeriodForm;\n","import { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { TEAMS } from '../../utils/routesMap';\nimport { forTeamCalendar as config } from '../../configs/configForComponents';\nimport TeamCalendarTable from '../TeamCalendarTable/TeamCalendarTable';\nimport SetDatePeriodForm from '../SetDatePeriodForm/SetDatePeriodForm';\nimport PropTypes from 'prop-types';\nimport './TeamCalendar.css';\n\n/**\n * @module TeamCalendar\n * @description Календарь матчей выбранной команды\n * @param {Function} getData - колбэк, получает данные о команде и о матчах\n * @param {Array} teamCalendarData - массив матчей команды\n * @param {Object} teamInfo - информация о команде\n * @param {Function} handleSubmitSetDatePeriodForm - колбэк, обработчик сабмита формы задания диапазона дат\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction TeamCalendar({ getData, teamCalendarData, teamInfo, handleSubmitSetDatePeriodForm }) {\n  let { id, dateFromId, dateToId } = useParams();\n  const { TITLE, BACK_TO_TEAMS_LIST_LINK_TEXT } = config;\n\n  useEffect(() => {\n    dateFromId && dateToId ? getData(id, dateFromId, dateToId) : getData(id);\n  }, [getData, id, dateFromId, dateToId]);\n\n  return (\n    <section className=\"team-calendar\">\n      <h2 className=\"team-calendar__title\">{TITLE}</h2>\n      <div className=\"team-calendar__info\">\n        <img\n          src={teamInfo.crestUrl}\n          alt=\"логотип футбольного клуба\"\n          className=\"team-calendar__image\"\n        />\n        <div className=\"team-calendar__description\">\n          <h3 className=\"team-calendar__team-name\">{teamInfo.name || ''}</h3>\n          <p className=\"team-calendar__team-country-name\">\n            {teamInfo.area ? teamInfo.area.name : ''}\n          </p>\n          {dateFromId ? (\n            <Link to={`${TEAMS}/${id}`} className=\"team-calendar__link\">\n              {TITLE}\n            </Link>\n          ) : null}\n        </div>\n\n        <SetDatePeriodForm handleSubmitSetDatePeriodForm={handleSubmitSetDatePeriodForm} />\n\n        <Link className=\"team-calendar__link\" to={TEAMS}>\n          {BACK_TO_TEAMS_LIST_LINK_TEXT}\n        </Link>\n      </div>\n\n      <TeamCalendarTable teamCalendarData={teamCalendarData} id={id} />\n    </section>\n  );\n}\n\nTeamCalendar.propTypes = {\n  getData: PropTypes.func.isRequired,\n  teamCalendarData: PropTypes.array.isRequired,\n  teamInfo: PropTypes.object.isRequired,\n  handleSubmitSetDatePeriodForm: PropTypes.func.isRequired,\n};\n\nexport default TeamCalendar;\n","import PropTypes from 'prop-types';\nimport './CompetitionCalendarTableStroke.css';\n\n/**\n * @module CompetitionCalendarTableStroke\n * @description Строка таблицы с данными о матче\n * @param {Object} match - объект с данными о матче\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction CompetitionCalendarTableStroke({ match }) {\n  const date = new Date(match.utcDate).toLocaleString().slice(0, 10);\n  const time = new Date(match.utcDate).toLocaleTimeString().slice(0, 5);\n  return (\n    <>\n      <tr className=\"matchday-table-stroke matchday-table__stroke\">\n        <td className=\"matchday-table__cell matchday-table__cell_size_100\">\n          <span className=\"matchday-table-stroke__date\">{date}</span>\n        </td>\n        <td className=\"matchday-table__cell matchday-table__cell_size_60\">\n          <span className=\"matchday-table-stroke__time\">{time}</span>\n        </td>\n        <td className=\"matchday-table__cell matchday-table__cell_size_220\">\n          <span className=\"matchday-table-stroke__hometeam\">{match.homeTeam.name}</span>\n        </td>\n        <td className=\"matchday-table__cell matchday-table__cell_size_50\">\n          <span className=\"matchday-table-stroke__score\">\n            {`${\n              match.score.fullTime.homeTeam !== null ? match.score.fullTime.homeTeam : ' -- '\n            } : ${match.score.fullTime.awayTeam !== null ? match.score.fullTime.awayTeam : ' -- '}`}\n          </span>\n        </td>\n        <td className=\"matchday-table__cell matchday-table__cell_size_220\">\n          <span className=\"matchday-table-stroke__awayteam\">{match.awayTeam.name}</span>\n        </td>\n        <td className=\"matchday-table__cell matchday-table__cell_size_135\">\n          <span className=\"matchday-table-stroke__group\">{match.group}</span>\n        </td>\n        <td className=\"matchday-table__cell matchday-table__cell_size_135\">\n          <span className=\"matchday-table-stroke__status\">{match.status}</span>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nCompetitionCalendarTableStroke.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default CompetitionCalendarTableStroke;\n","import CompetitionCalendarTableStroke from '../CompetitionCalendarTableStroke/CompetitionCalendarTableStroke';\nimport { forCompetitionCalendarTable as config } from '../../configs/configForComponents';\nimport PropTypes from 'prop-types';\nimport './CompetitionCalendarTable.css';\n\n/**\n * @module CompetitionCalendarTable\n * @description Таблица календаря матчей турнира\n * @param {Object} competitionInfo - объект с информацией о турнире\n * @param {Object} calendarData - объект с данными о матчах\n * @param {String} seasonId - идентификатор сезона - год начала сезона\n * @param {String} monthId - идентификатор месяца сезона\n * @param {String} dateFromId - начальная дата диапазона дат\n * @param {String} dateToId - конечная дата диапазона дат\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction CompetitionCalendarTable({\n  competitionInfo,\n  calendarData,\n  seasonId,\n  monthId,\n  dateFromId,\n  dateToId,\n}) {\n  const { DATE, HOMETEAM, SCORE, AWAYTEAM, GROUP, STATUS } = config;\n\n  return (\n    <table className=\"competition-table competition-calendar__table\">\n      <thead className=\"competition-table-head competition-table__header\">\n        <tr>\n          <th className=\"competition-table-head__cell\" colSpan=\"2\">\n            <span className=\"competition-table-head__date\">{DATE}</span>\n          </th>\n          <th className=\"competition-table-head__cell\">\n            <span className=\"competition-table-head__hometeam\">{HOMETEAM}</span>\n          </th>\n          <th className=\"competition-table-head__cell\">\n            <span className=\"competition-table-head__score\">{SCORE}</span>\n          </th>\n          <th className=\"competition-table-head__cell\">\n            <span className=\"competition-table-head__awayteam\">{AWAYTEAM}</span>\n          </th>\n          <th className=\"competition-table-head__cell\">\n            <span className=\"competition-table-head__group\">{GROUP}</span>\n          </th>\n          <th className=\"competition-table-head__cell\">\n            <span className=\"competition-table-head__status\">{STATUS}</span>\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {competitionInfo.currentSeason && calendarData[monthId] && seasonId && monthId\n          ? calendarData[monthId].map((match) => (\n              <CompetitionCalendarTableStroke key={match.id} match={match} />\n            ))\n          : null}\n        {competitionInfo.currentSeason && calendarData.matches && dateFromId && dateToId\n          ? calendarData.matches.map((match) => (\n              <CompetitionCalendarTableStroke key={match.id} match={match} />\n            ))\n          : null}\n      </tbody>\n    </table>\n  );\n}\n\nCompetitionCalendarTable.propTypes = {\n  competitionInfo: PropTypes.object.isRequired,\n  calendarData: PropTypes.object.isRequired,\n  seasonId: PropTypes.string,\n  monthId: PropTypes.string,\n  dateFromId: PropTypes.string,\n  dateToId: PropTypes.string,\n};\n\nexport default CompetitionCalendarTable;\n","import * as to from '../../utils/routesMap';\nimport { forCompetitionCalendar as config } from '../../configs/configForComponents';\nimport { useEffect, useRef, useCallback } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport pathToBallImage from '../../images/soccer-ball.svg';\nimport CompetitionCalendarTable from '../CompetitionCalendarTable/CompetitionCalendarTable';\nimport SetDatePeriodForm from '../SetDatePeriodForm/SetDatePeriodForm';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './CompetitionCalendar.css';\n\n/**\n * @module CompetitionCalendar\n * @description Страница календаря игр турнира.\n * @param {Object} calendarData - объект с данными об играх турнира\n * @param {Object} competitionInfo -  объект с информацией о турнире\n * @param {Function} getData - колбэк, метод запроса данных о турнире и об играх турнира\n * @param {Function} handleChangeSeason - колбэк, обработчик выбора сезона в меню выпадающего списка\n * @param {Function} handleChangeMonth - колбэк, обработчик выбора месяца в меню выпадающего списка\n * @param {Function} handleSubmitSetDatePeriodForm - колбэк, обработчик сабмита формы задания диапазона дат\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction CompetitionCalendar({\n  calendarData,\n  competitionInfo,\n  getData,\n  handleChangeSeason,\n  handleChangeMonth,\n  handleSubmitSetDatePeriodForm,\n}) {\n  let { id, seasonId, monthId, dateFromId, dateToId } = useParams();\n\n  const seasonSelectInput = useRef(null);\n  const monthSelectInput = useRef(null);\n\n  const {\n    TITLE,\n    BACK_TO_COMPETITIONS_LIST_LINK_TEXT,\n    MONTH,\n    SEASON,\n    MONTHS_LIST,\n    SEASON_OPTION_TEXT,\n    MONTH_OPTION_TEXT,\n  } = config;\n\n  const competitionCalendarImageClassName = classNames(\n    'competition-calendar__image',\n    !competitionInfo.emblemUrl && 'competition-calendar__image_hidden-on-mobile',\n  );\n\n  /**\n   * @method handleChangeSeasonSelectInputOption\n   * @description Обработчик выбора сезона в меню выпадающего списка.\n   * @public\n   * @since v.1.0.0\n   */\n  const handleChangeSeasonSelectInputOption = useCallback(() => {\n    const selectedSeason = competitionInfo.seasons.find(\n      (season) => season.startDate.slice(0, 4) === seasonSelectInput.current.value,\n    );\n    handleChangeSeason(selectedSeason, id);\n  }, [competitionInfo.seasons, handleChangeSeason, id]);\n\n  /**\n   * @method handleChangeMonthSelectInputOption\n   * @description Обработчик выбора месяца в меню выпадающего списка.\n   * @public\n   * @since v.1.0.0\n   */\n  const handleChangeMonthSelectInputOption = useCallback(() => {\n    handleChangeMonth({\n      id,\n      season: seasonSelectInput.current.value,\n      selectedMonth: monthSelectInput.current.value,\n    });\n  }, [id, handleChangeMonth]);\n\n  useEffect(() => {\n    seasonId && monthId ? getData(id, seasonId) : getData(id, dateFromId, dateToId);\n  }, [getData, id, seasonId, monthId, dateFromId, dateToId]);\n\n  return (\n    <section className=\"competition-calendar\">\n      <h2 className=\"competition-calendar__title\">{TITLE}</h2>\n\n      <div className=\"competition-calendar__info\">\n        <img\n          src={competitionInfo.emblemUrl || pathToBallImage}\n          alt=\"логотип футбольного турнира\"\n          className={competitionCalendarImageClassName}\n        />\n        <div className=\"competition-calendar__description\">\n          <h3 className=\"competition-calendar__competition-name\">{competitionInfo.name || ''}</h3>\n          <p className=\"competition-calendar__competition-country-name\">\n            {competitionInfo.area ? competitionInfo.area.name : ''}\n          </p>\n\n          <div className=\"competition-calendar__season-select\">\n            <span className=\"competition-calendar__season\">{SEASON}</span>\n\n            <select\n              onChange={handleChangeSeasonSelectInputOption}\n              ref={seasonSelectInput}\n              name=\"season\"\n              value={seasonId}\n              className=\"competition-calendar__season-select-input\"\n            >\n              <option key={1} value={undefined}>\n                {SEASON_OPTION_TEXT}\n              </option>\n              {competitionInfo.seasons &&\n                competitionInfo.seasons.map((season) => (\n                  <option key={season.id} value={season.startDate.slice(0, 4)}>\n                    {`${season.startDate.slice(0, 4)} / ${season.endDate.slice(0, 4)}`}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n          <div className=\"competition-calendar__month-select\">\n            <span className=\"competition-calendar__month\">{MONTH}</span>\n\n            <select\n              onChange={handleChangeMonthSelectInputOption}\n              ref={monthSelectInput}\n              name=\"month\"\n              value={monthId}\n              disabled={!monthId}\n              className=\"competition-calendar__month-select-input\"\n            >\n              <option key={1} value={undefined}>\n                {MONTH_OPTION_TEXT}\n              </option>\n              {Object.keys(calendarData).map((calendarDataKey, index) => (\n                <option key={index} value={calendarDataKey}>\n                  {MONTHS_LIST[calendarDataKey]}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <SetDatePeriodForm handleSubmitSetDatePeriodForm={handleSubmitSetDatePeriodForm} />\n\n        <Link className=\"competition-calendar__link\" to={to.COMPETITIONS}>\n          {BACK_TO_COMPETITIONS_LIST_LINK_TEXT}\n        </Link>\n      </div>\n\n      <CompetitionCalendarTable\n        competitionInfo={competitionInfo}\n        calendarData={calendarData}\n        seasonId={seasonId}\n        monthId={monthId}\n        dateFromId={dateFromId}\n        dateToId={dateToId}\n      />\n    </section>\n  );\n}\n\nCompetitionCalendar.propTypes = {\n  calendarData: PropTypes.object.isRequired,\n  competitionInfo: PropTypes.object.isRequired,\n  getData: PropTypes.func.isRequired,\n  handleChangeSeason: PropTypes.func.isRequired,\n  handleChangeMonth: PropTypes.func.isRequired,\n  handleSubmitSetDatePeriodForm: PropTypes.func.isRequired,\n};\n\nexport default CompetitionCalendar;\n","import { Link } from 'react-router-dom';\nimport { MAIN } from '../../utils/routesMap';\nimport { forPageNotFound as config } from '../../configs/configForComponents';\nimport './PageNotFound.css';\n\n/**\n * @module PageNotFound\n * @description Страница с сообщением, что пользователь пытался перейти на несуществующую страницу.\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction PageNotFound() {\n  const { TITLE, DESCRIPTION, ERROR_STATUS, LINK_TEXT } = config;\n  return (\n    <section className=\"page-not-found\">\n      <div className=\"page-not-found__element\"></div>\n      <span className=\"page-not-found__status\">{ERROR_STATUS}</span>\n      <h2 className=\"page-not-found__title\">{TITLE}</h2>\n      <p className=\"page-not-found__description\">{DESCRIPTION}</p>\n      <Link className=\"page-not-found__link\" to={MAIN}>\n        {LINK_TEXT}\n      </Link>\n    </section>\n  );\n}\n\nexport default PageNotFound;\n","import { forPreloader as config } from '../../configs/configForComponents';\nimport './Preloader.css';\n\n/**\n * @module Preloader\n * @description Блок с отображением анимационного элемента во время выполнения запроса или поиска.<br>\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction Preloader() {\n  const { TITLE } = config;\n  return (\n    <div className=\"preloader\">\n      <div className=\"preloader__element\"></div>\n      <p className=\"preloader__title\">{TITLE}</p>\n    </div>\n  );\n}\n\nexport default Preloader;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './InfoTooltip.css';\n\n/**\n * @module InfoTooltip\n * @description Функциональный компонент<br>\n * Всплывающая подсказка об успешной регистрации пользователя.<br>\n * @property {Function} onOverlayClick - колбэк, закрывает подсказку при клике по оверлею\n * @property {Boolean} isOpened - стейт открытого состояния подсказки\n * @property {Function} onClose - колбэк, закрывает попапы при клике по крестику\n * @property {String} errorTitle - заголовок подсказки\n * @property {String} errorSubtitle - текст подсказки\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction InfoTooltip({ onOverlayClick, isOpened, onClose, errorTitle, errorSubtitle }) {\n  const infoTooltipOverlayClassName = classNames('popup-info', 'page__overlay-info', {\n    'popup-info_opened': isOpened,\n  });\n\n  return (\n    <div onClick={onOverlayClick} className={infoTooltipOverlayClassName}>\n      <div className=\"popup-info__container\">\n        <button type=\"button\" onClick={onClose} className=\"popup-info__close-button\"></button>\n        <h2 className=\"popup-info__tooltip-title\">{errorTitle}</h2>\n        <p className=\"popup-info__tooltip-subtitle\">{errorSubtitle}</p>\n      </div>\n    </div>\n  );\n}\n\nInfoTooltip.propTypes = {\n  onOverlayClick: PropTypes.func.isRequired,\n  isOpened: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  errorTitle: PropTypes.string.isRequired,\n  errorSubtitle: PropTypes.string,\n};\n\nexport default InfoTooltip;\n","import InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport { forInfoTooltip as config } from '../../configs/configForComponents';\nimport PropTypes from 'prop-types';\n\n/**\n * @module ErrorTooltip\n * @description Всплывающая подсказка об ошибке поиска или сервера.\n * @param {Boolean} isErrorTooltipOpened - стейт состояния подсказки об ошибке поиска\n * @param {Boolean} isServerErrorTooltipOpened - стейт состояния подсказки об ошибке сервера\n * @param {Function} onOverlayClick - колбэк, обработчик клика по оверлею\n * @param {Function} onClose - колбэк, обработчик клика по иконке закрытия подсказки\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction ErrorTooltip({\n  isErrorTooltipOpened,\n  isServerErrorTooltipOpened,\n  onOverlayClick,\n  onClose,\n}) {\n  const { ERROR_TITLE, ERROR_SUBTITLE, SERVER_ERROR_TITLE, SERVER_ERROR_SUBTITLE } = config;\n  return (\n    <InfoTooltip\n      isOpened={isErrorTooltipOpened || isServerErrorTooltipOpened}\n      onOverlayClick={onOverlayClick}\n      onClose={onClose}\n      errorTitle={isErrorTooltipOpened ? ERROR_TITLE : SERVER_ERROR_TITLE}\n      errorSubtitle={isErrorTooltipOpened ? ERROR_SUBTITLE : SERVER_ERROR_SUBTITLE}\n    />\n  );\n}\n\nErrorTooltip.propTypes = {\n  isErrorTooltipOpened: PropTypes.bool.isRequired,\n  isServerErrorTooltipOpened: PropTypes.bool.isRequired,\n  onOverlayClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ErrorTooltip;\n","export const COMPETITIONS = '/competitions';\n\nexport const TEAMS = '/teams';\n\nexport const MATCHES = '/matches';\n","export const API_URL = 'https://api.football-data.org/v2';\n\nexport const API_KEY = '36d90cde831e4b36a75a225160fe45d3';\n","import * as PATH_TO from './endpoints';\nimport { API_URL, API_KEY } from '../configs';\n\n/**\n * @module NewsApi\n * @description Модуль взаимодействия с новостным сервером.\n * @since v.1.1.0\n */\n\n/**\n * @method getCompetitionsData\n * @description Метод получения данных о доступных турнирах\n * @returns {JSON} массив с данными турниров\n * @since v.1.0.0\n */\nexport const getCompetitionsData = () => {\n  return fetch(`${API_URL}${PATH_TO.COMPETITIONS}`, {\n    method: 'GET',\n    headers: {\n      'X-Auth-Token': `${API_KEY}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n\n/**\n * @method getTeamsData\n * @description Метод получения данных о доступных командах\n * @returns {JSON} массив с данными команд\n * @since v.1.0.0\n */\nexport const getTeamsData = () => {\n  return fetch(`${API_URL}${PATH_TO.TEAMS}`, {\n    method: 'GET',\n    headers: {\n      'X-Auth-Token': `${API_KEY}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n\n/**\n * @method getCompetitionCalendarBySeason\n * @description Метод получения данных о матчах турнира по сезону\n * @param {Number} competitionId - id турнира\n * @param {Number} seasonStartDate - дата начала сезона\n * @returns {JSON} массив с данными о матчах турнира в выбранном сезоне\n * @since v.1.0.0\n */\nexport const getCompetitionCalendarBySeason = (competitionId, seasonStartDate) => {\n  return fetch(\n    `${API_URL}${PATH_TO.COMPETITIONS}/${competitionId}${PATH_TO.MATCHES}?season=${seasonStartDate}`,\n    {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': `${API_KEY}`,\n      },\n    },\n  ).then((res) => {\n    if (!res.status.toString().startsWith('5') || !(res.status === 429)) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n\n/**\n * @method getTeamCalendar\n * @description Метод получения данных о матчах команды\n * @param {Number} teamId - id команды\n * @returns {JSON} массив с данными о матчах команды\n * @since v.1.0.0\n */\nexport const getTeamCalendar = (teamId) => {\n  return fetch(`${API_URL}${PATH_TO.TEAMS}/${teamId}${PATH_TO.MATCHES}`, {\n    method: 'GET',\n    headers: {\n      'X-Auth-Token': `${API_KEY}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n\n/**\n * @method getTeamCalendarByDatePeriod\n * @description Метод получения данных о матчах команды за определенный период\n * @param {Number} teamId - id команды\n * @param {String} dateFrom - дата начала периода\n * @param {String} dateTo - дата окончания периода\n * @returns {JSON} массив с данными о матчах команды за заданный период\n * @since v.1.0.0\n */\nexport const getTeamCalendarByDatePeriod = (teamId, dateFrom, dateTo) => {\n  return fetch(\n    `${API_URL}${PATH_TO.TEAMS}/${teamId}${PATH_TO.MATCHES}?dateFrom=${dateFrom}&dateTo=${dateTo}`,\n    {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': `${API_KEY}`,\n      },\n    },\n  ).then((res) => {\n    if (!res.status.toString().startsWith('5') || !(res.status === 429)) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n\n/**\n * @method getCompetitionCalendarByPeriod\n * @description Метод получения данных о матчах турнира за определенный период\n * @param {Number} competitionId - id турнира\n * @param {String} dateFrom - дата начала периода\n * @param {String} dateTo - дата окончания периода\n * @returns {JSON} массив с данными о матчах турнира за заданный период\n * @since v.1.0.0\n */\nexport const getCompetitionCalendarByPeriod = (competitionId, dateFrom, dateTo) => {\n  return fetch(\n    `${API_URL}${PATH_TO.COMPETITIONS}/${competitionId}${PATH_TO.MATCHES}?dateFrom=${dateFrom}&dateTo=${dateTo}`,\n    {\n      method: 'GET',\n      headers: {\n        'X-Auth-Token': `${API_KEY}`,\n      },\n    },\n  ).then((res) => {\n    if (!res.status.toString().startsWith('5') || !(res.status === 429)) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n\n/**\n * @method getTeamInfo\n * @description Метод получения информации о команде\n * @param {Number} teamId - id команды\n * @returns {JSON} данные о команде\n * @since v.1.0.0\n */\nexport const getTeamInfo = (teamId) => {\n  return fetch(`${API_URL}${PATH_TO.TEAMS}/${teamId}`, {\n    method: 'GET',\n    headers: {\n      'X-Auth-Token': `${API_KEY}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n\n/**\n * @method getCompetitionInfo\n * @description Методп олучения информации о турнире\n * @param {Number} competitionId - id турнира\n * @returns {JSON} информация о турнире\n * @since v.1.0.0\n */\nexport const getCompetitionInfo = (competitionId) => {\n  return fetch(`${API_URL}${PATH_TO.COMPETITIONS}/${competitionId}`, {\n    method: 'GET',\n    headers: {\n      'X-Auth-Token': `${API_KEY}`,\n    },\n  }).then((res) => {\n    if (!res.status.toString().startsWith('5') || !(res.status === 429)) {\n      return res.json();\n    }\n    return Promise.reject(`Статус ответа: ${res.status} ${res.statusText}`);\n  });\n};\n","import InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport { forInfoTooltip as config } from '../../configs/configForComponents';\nimport PropTypes from 'prop-types';\n\n/**\n * @module EmptyDataTooltip\n * @description Всплывающая подсказка об отсутсвии данных о матчах.\n * @param {Boolean} isEmptyDataTooltipOpened - стейт состояния подсказки об отсутсвии данных\n *  о матчах в заданном диапазоне дат\n * @param {Boolean} hasNoMatchesTooltipOpened - стейт состояния подсказки об отсутствии данных\n *  о матчах в выбранных турнире или команде\n * @param {Function} onOverlayClick - колбэк, обработчик клика по оверлею\n * @param {Function} onClose - колбэк, обработчик клика по иконке закрытия подсказки\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction EmptyDataTooltip({\n  isEmptyDataTooltipOpened,\n  hasNoMatchesTooltipOpened,\n  onOverlayClick,\n  onClose,\n}) {\n  const {\n    EMPTY_DATA_TITLE,\n    EMPTY_DATA_SUBTITLE,\n    NO_MATCHES_PLANED_TITLE,\n    NO_MATCHES_PLANED_SUBTITLE,\n  } = config;\n  return (\n    <InfoTooltip\n      isOpened={isEmptyDataTooltipOpened || hasNoMatchesTooltipOpened}\n      onOverlayClick={onOverlayClick}\n      onClose={onClose}\n      errorTitle={isEmptyDataTooltipOpened ? EMPTY_DATA_TITLE : NO_MATCHES_PLANED_TITLE}\n      errorSubtitle={isEmptyDataTooltipOpened ? EMPTY_DATA_SUBTITLE : NO_MATCHES_PLANED_SUBTITLE}\n    />\n  );\n}\n\nEmptyDataTooltip.propTypes = {\n  isEmptyDataTooltipOpened: PropTypes.bool.isRequired,\n  hasNoMatchesTooltipOpened: PropTypes.bool.isRequired,\n  onOverlayClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default EmptyDataTooltip;\n","import { useCallback, useEffect, useState } from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport CardsList from '../CardsList/CardsList';\nimport TeamCalendar from '../TeamCalendar/TeamCalendar';\nimport CompetitionCalendar from '../CompetitionCalendar/CompetitionCalendar';\nimport PageNotFound from '../PageNotFound/PageNotFound';\nimport Preloader from '../Preloader/Preloader';\nimport ErrorTooltip from '../ErrorTooltip/ErrorTooltip';\nimport {\n  getCompetitionsData,\n  getTeamsData,\n  getCompetitionCalendarBySeason,\n  getTeamCalendar,\n  getTeamInfo,\n  getCompetitionInfo,\n  getCompetitionCalendarByPeriod,\n  getTeamCalendarByDatePeriod,\n} from '../../utils/Api';\nimport * as to from '../../utils/routesMap';\nimport './App.css';\nimport EmptyDataTooltip from '../EmptyDataTooltip/EmptyDataTooltip';\n\n/**\n * @module App\n * @description Функциональный компонент<br>\n * Главный компонент приложения<br>\n * Управляет всеми компонентами приложения<br>\n * @returns {JSX}\n * @since v.1.0.0\n */\nfunction App() {\n  const history = useHistory();\n\n  const [competitionsList, setCompetitionsList] = useState([]);\n  const [teamsList, setTeamsList] = useState([]);\n  const [calendarData, setCalendarData] = useState({});\n  const [competitionInfo, setCompetitionInfo] = useState({});\n  const [teamCalendarData, setTeamCalendarData] = useState([]);\n  const [teamInfo, setTeamInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorTooltipOpened, setIsErrorTooltipOpened] = useState(false);\n  const [isServerErrorTooltipOpened, setIsServerErrorTooltipOpened] = useState(false);\n  const [isEmptyDataTooltipOpened, setIsEmptyDataTooltipOpened] = useState(false);\n  const [hasNoMatchesTooltipOpened, setHasNoMatchesTooltipOpened] = useState(false);\n  const [isMobileMenuOpened, setIsMobileMenuOpened] = useState(false);\n\n  /**\n   * @method\n   * @name closeAllPopups\n   * @description Публичный метод<br>\n   * Закрывает все попапы, удаляет слушатель нажатия клавиши Esc\n   * @param {function} callback - колбэк, слушатель которого будет удален при вызове closeAllPopups\n   * @public\n   * @since v.1.0.0\n   */\n  const closeAllPopups = useCallback((callback) => {\n    document.removeEventListener('keydown', callback);\n    setIsErrorTooltipOpened(false);\n    setIsServerErrorTooltipOpened(false);\n    setIsEmptyDataTooltipOpened(false);\n    setHasNoMatchesTooltipOpened(false);\n    setIsMobileMenuOpened(false);\n  }, []);\n\n  /**\n   * @method handleEscClose\n   * @description Обработчик нажатия на клавишу Escape<br>\n   * Закрывает попап при нажатии клавиши Esc\n   * @param {Event} evt - событие\n   * @public\n   * @since v.1.0.0\n   */\n  const handleEscClose = useCallback(\n    (evt) => {\n      if (evt.key === 'Escape') {\n        closeAllPopups(handleEscClose);\n      }\n    },\n    [closeAllPopups],\n  );\n\n  /**\n   * @method handleClickOnOverlay\n   * @description Обработчик клика по оверлею<br>\n   * Закрывает попап при клике по оверлею\n   * @param {Event} evt - событие\n   * @public\n   * @since v.1.0.0\n   */\n  const handleClickOnOverlay = useCallback(\n    (evt) => {\n      if (evt.target === evt.currentTarget) {\n        closeAllPopups(handleEscClose);\n      }\n    },\n    [closeAllPopups, handleEscClose],\n  );\n\n  const getFullData = useCallback(() => {\n    setIsLoading(true);\n    Promise.all([getCompetitionsData(), getTeamsData()])\n      .then(([competitionsData, teamsData]) => {\n        console.log('hi hi hi');\n        const competitionsArray = competitionsData.competitions\n          .filter(\n            (competition) =>\n              competition.plan === 'TIER_ONE' && competition.id !== 2013 && competition.id !== 2000,\n          )\n          .map((competition) => {\n            const resultCompetitionData = {\n              id: competition.id,\n              area: competition.area,\n              name: competition.name,\n              image: competition.area.ensignUrl,\n              currentSeason: competition.currentSeason.startDate.slice(0, 4),\n              currentSeasonMonth: new Date(competition.currentSeason.startDate).getMonth(),\n            };\n            return resultCompetitionData;\n          });\n        const teamsArray = teamsData.teams.map((team) => {\n          const resultTeamData = {\n            id: team.id,\n            area: team.area,\n            name: team.name,\n            image: team.crestUrl,\n          };\n          return resultTeamData;\n        });\n        setCompetitionsList(competitionsArray);\n        setTeamsList(teamsArray);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsServerErrorTooltipOpened(true);\n        document.addEventListener('keydown', handleEscClose);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [handleEscClose]);\n\n  /**\n   * @method handleClickOnCompetitionCard\n   * @description Обработчик нажатия на карточку турнира<br>\n   * При нажатии на карточку турнира происходит переадресация на страницу турнира.\n   * @param {Number} id - id турнира\n   * @since v.1.0.0\n   * @public\n   */\n  const handleClickOnCompetitionCard = useCallback(\n    (id) => {\n      const selectedCompetition = competitionsList.find((competition) => competition.id === id);\n      history.push(\n        `${history.location.pathname}/${id}${to.SEASON}/${selectedCompetition.currentSeason}${to.MONTH}/${selectedCompetition.currentSeasonMonth}`,\n      );\n    },\n    [history, competitionsList],\n  );\n\n  /**\n   * @method handleClickOnTeamCard\n   * @description Обработчик нажатия на карточку команды<br>\n   * При нажатии на карточку команды происходит переадресация на страницу команды.\n   * @param {Number} id - id команды\n   * @since v.1.0.0\n   * @public\n   */\n  const handleClickOnTeamCard = useCallback(\n    (id) => {\n      history.push(`${history.location.pathname}/${id}`);\n    },\n    [history],\n  );\n\n  /**\n   * @method getCompetitionCalendarBySeasonId\n   * @description Метод получения данных о турнире по его id и году начала сезона.<br>\n   * Возвращает и сохраняет в стейты объект с данными турнира и объект с информацией о турнире.\n   * @param {Number} id - id турнира\n   * @param {String} seasonId - год начала сезона турнира\n   * @returns {Object}\n   * @since v.1.0.0\n   * @public\n   */\n  const getCompetitionDataBySeasonId = useCallback(\n    (id, seasonId) => {\n      Promise.all([getCompetitionCalendarBySeason(id, seasonId), getCompetitionInfo(id)])\n        .then(([data, info]) => {\n          if (!data.matches) {\n            setIsErrorTooltipOpened(true);\n            document.addEventListener('keydown', handleEscClose);\n            setCalendarData({});\n          } else {\n            const matchesSortedByMonths = data.matches.reduce((acc, match) => {\n              const matchDate = new Date(match.utcDate).getMonth();\n              if (!acc[matchDate]) {\n                acc[matchDate] = [match];\n              } else {\n                acc[matchDate].push(match);\n              }\n              return acc;\n            }, {});\n            setCalendarData(matchesSortedByMonths);\n            setCompetitionInfo(info);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsServerErrorTooltipOpened(true);\n          document.addEventListener('keydown', handleEscClose);\n        });\n    },\n    [handleEscClose],\n  );\n\n  /**\n   * @method getCompetitionDataByDatePeriod\n   * @description Метод получения данных о турнире по его id и диапазону дат.<br>\n   * Возвращает и сохраняет в стейты объект с данными турнира и объект с информацией о турнире.\n   * @param {Number} id - id турнира\n   * @param {String} dateFromId - начальная дата диапазона\n   * @param {String} dateToId - конечная дата диапазона\n   * @returns {Object}\n   * @since v.1.0.0\n   * @public\n   */\n  const getCompetitionDataByDatePeriod = useCallback(\n    (id, dateFromId, dateToId) => {\n      Promise.all([\n        getCompetitionCalendarByPeriod(id, dateFromId, dateToId),\n        getCompetitionInfo(id),\n      ])\n        .then(([data, info]) => {\n          if (!data.matches) {\n            setIsErrorTooltipOpened(true);\n            document.addEventListener('keydown', handleEscClose);\n            setCalendarData({});\n          } else if (data.matches.length === 0) {\n            document.addEventListener('keydown', handleEscClose);\n            setIsEmptyDataTooltipOpened(true);\n          } else {\n            setCalendarData(data);\n            setCompetitionInfo(info);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsServerErrorTooltipOpened(true);\n          document.addEventListener('keydown', handleEscClose);\n        });\n    },\n    [handleEscClose],\n  );\n\n  /**\n   * @method getTeamData\n   * @description Метод получения данных команды по ее id.<br>\n   * Возвращает и сохраняет в стейты объект с данными о матчах команды и объект с информацией о команде.\n   * @param {Number} id - id команды\n   * @returns {Object}\n   * @since v.1.0.0\n   * @public\n   */\n  const getTeamData = useCallback(\n    (id) => {\n      Promise.all([getTeamCalendar(id), getTeamInfo(id)])\n        .then(([data, info]) => {\n          setTeamInfo(info);\n          if (data.matches.length === 0) {\n            document.addEventListener('keydown', handleEscClose);\n            setCalendarData(data.matches);\n            setHasNoMatchesTooltipOpened(true);\n          } else {\n            setTeamCalendarData(data.matches);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsServerErrorTooltipOpened(true);\n          document.addEventListener('keydown', handleEscClose);\n        });\n    },\n    [handleEscClose],\n  );\n\n  /**\n   * @method getTeamDataByDatePeriod\n   * @description Метод получения данных команды по ее id и диапазону дат.<br>\n   * Возвращает и сохраняет в стейты объект с данными о матчах команды и объект с информацией о команде.\n   * @param {Number} id - id команды\n   * @returns {Object}\n   * @since v.1.0.0\n   * @public\n   */\n  const getTeamDataByDatePeriod = useCallback(\n    (id, dateFromId, dateToId) => {\n      Promise.all([getTeamCalendarByDatePeriod(id, dateFromId, dateToId), getTeamInfo(id)])\n        .then(([data, info]) => {\n          if (!data.matches) {\n            setIsErrorTooltipOpened(true);\n            document.addEventListener('keydown', handleEscClose);\n            setCalendarData({});\n          } else if (data.matches.length === 0) {\n            document.addEventListener('keydown', handleEscClose);\n            setIsEmptyDataTooltipOpened(true);\n          } else {\n            setTeamCalendarData(data.matches);\n            setTeamInfo(info);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setIsServerErrorTooltipOpened(true);\n          document.addEventListener('keydown', handleEscClose);\n        });\n    },\n    [handleEscClose],\n  );\n\n  /**\n   * @method handleSubmitSearchFormOnCompetitionsList\n   * @description Обработчик сабмита формы поиска турнира по названию турнира<br>\n   * Находит турнир по запросу и переадресовывает на его страницу.\n   * @param {Object} obtainedCard - объект с данными турнира, найденного по запросу\n   * @public\n   * @since v.1.0.0\n   */\n  const handleSubmitSearchFormOnCompetitionsList = useCallback(\n    (obtainedCard) => {\n      if (!obtainedCard) {\n        setIsErrorTooltipOpened(true);\n        document.addEventListener('keydown', handleEscClose);\n      } else {\n        history.push(\n          `${history.location.pathname}/${obtainedCard.id}${to.SEASON}/${obtainedCard.currentSeason}${to.MONTH}/${obtainedCard.currentSeasonMonth}`,\n        );\n      }\n    },\n    [history, setIsErrorTooltipOpened, handleEscClose],\n  );\n\n  /**\n   * @method handleSubmitSearchFormOnTeamsList\n   * @description Обработчик сабмита формы поиска команды по названию<br>\n   * Находит команду по запросу и переадресовывает на ее страницу.\n   * @param {Object} obtainedCard - объект с данными команды, найденной по запросу\n   * @public\n   * @since v.1.0.0\n   */\n  const handleSubmitSearchFormOnTeamsList = useCallback(\n    (obtainedCard) => {\n      if (!obtainedCard) {\n        setIsErrorTooltipOpened(true);\n        document.addEventListener('keydown', handleEscClose);\n      } else {\n        history.push(`${history.location.pathname}/${obtainedCard.id}`);\n      }\n    },\n    [history, setIsErrorTooltipOpened, handleEscClose],\n  );\n\n  /**\n   * @method handleChangeSeason\n   * @description Обработчик изменения сезона в выпадающем списке сезонов<br>\n   * Переадресовывает на страницу турнира с данными выбранного сезона\n   * @param {Number} selectedSeason - года начала выбранного сезона\n   * @param {Number} id -id турнира\n   * @public\n   * @since v.1.0.0\n   */\n  const handleChangeSeason = useCallback(\n    (selectedSeason, id) => {\n      history.push(\n        `${to.COMPETITIONS}/${id}${to.SEASON}/${selectedSeason.startDate.slice(0, 4)}${\n          to.MONTH\n        }/${new Date(selectedSeason.startDate).getMonth()}`,\n      );\n    },\n    [history],\n  );\n\n  /**\n   * @method handleChangeMonth\n   * @description Обработчик изменения месяца в выпадающем списке месяцев<br>\n   * Переадресовывает на страницу турнира с матчами в выбранном месяце\n   * @param {Number} id -id турнира\n   * @param {String} season - года начала сезона\n   * @param {Number} selectedMonth - выбранный месяц\n   * @public\n   * @since v.1.0.0\n   */\n  const handleChangeMonth = useCallback(\n    ({ id, season, selectedMonth }) => {\n      history.push(`${to.COMPETITIONS}/${id}${to.SEASON}/${season}${to.MONTH}/${selectedMonth}`);\n    },\n    [history],\n  );\n\n  /**\n   * @method handleSubmitSetDatePeriodForm\n   * @description Обработчик сабмита формы выбора диапазона дат для поиска данных<br>\n   * Переадресовывает на страницу команды или турнира с данными за указанный период\n   * @param {String} dateFrom - начальная дата диапазона\n   * @param {String} dateTo - конечная дата диапазона\n   * @public\n   * @since v.1.0.0\n   */\n  const handleSubmitSetDatePeriodForm = useCallback(\n    (dateFrom, dateTo) => {\n      history.push(\n        `${history.location.pathname.split('/').slice(0, 3).join('/')}${\n          to.PERIOD\n        }/${dateFrom}/${dateTo}`,\n      );\n    },\n    [history],\n  );\n\n  /**\n   * @method  handleClickOnMenuButton\n   * @description Обработчик клика по кнопке \"Мобильное меню\"<br>\n   * Открывает/закрывает мобильное меню при клике по кнопке меню на мобильном разрешении\n   * @public\n   * @since v.1.0.0\n   */\n  const handleClickOnMenuButton = useCallback(() => {\n    if (isMobileMenuOpened) {\n      closeAllPopups(handleEscClose);\n    } else {\n      document.addEventListener('keydown', handleEscClose);\n      setIsMobileMenuOpened(true);\n    }\n  }, [closeAllPopups, handleEscClose, isMobileMenuOpened]);\n\n  useEffect(() => {\n    getFullData();\n    console.log(`history.location.pathname`);\n  }, [getFullData, history]);\n\n  return (\n    <>\n      <Header\n        onMenuButtonClick={handleClickOnMenuButton}\n        isMobileMenuOpened={isMobileMenuOpened}\n        onOverlayClick={handleClickOnOverlay}\n      />\n\n      <main className=\"content\">\n        <Switch>\n          <Route path={to.MAIN}>\n            <Redirect to={to.COMPETITIONS} />\n          </Route>\n          <Route path={to.COMPETITIONS} exact>\n            {isLoading ? (\n              <Preloader />\n            ) : (\n              <CardsList\n                cardsList={competitionsList}\n                handleSelectOfCard={handleClickOnCompetitionCard}\n                handleSubmitSearchForm={handleSubmitSearchFormOnCompetitionsList}\n              />\n            )}\n          </Route>\n          <Route path={to.TEAMS} exact>\n            {isLoading ? (\n              <Preloader />\n            ) : (\n              <CardsList\n                cardsList={teamsList}\n                handleSelectOfCard={handleClickOnTeamCard}\n                handleSubmitSearchForm={handleSubmitSearchFormOnTeamsList}\n              />\n            )}\n          </Route>\n          <Route path={`${to.TEAMS}/:id`} exact>\n            {isLoading ? (\n              <Preloader />\n            ) : (\n              <TeamCalendar\n                getData={getTeamData}\n                teamCalendarData={teamCalendarData}\n                teamInfo={teamInfo}\n                handleSubmitSetDatePeriodForm={handleSubmitSetDatePeriodForm}\n              />\n            )}\n          </Route>\n          <Route path={`${to.TEAMS}/:id${to.PERIOD}/:dateFromId/:dateToId`}>\n            {isLoading ? (\n              <Preloader />\n            ) : (\n              <TeamCalendar\n                getData={getTeamDataByDatePeriod}\n                teamCalendarData={teamCalendarData}\n                teamInfo={teamInfo}\n                handleSubmitSetDatePeriodForm={handleSubmitSetDatePeriodForm}\n              />\n            )}\n          </Route>\n\n          <Route path={`${to.COMPETITIONS}/:id${to.SEASON}/:seasonId${to.MONTH}/:monthId`}>\n            {isLoading ? (\n              <Preloader />\n            ) : (\n              <CompetitionCalendar\n                calendarData={calendarData}\n                competitionInfo={competitionInfo}\n                getData={getCompetitionDataBySeasonId}\n                handleChangeSeason={handleChangeSeason}\n                handleChangeMonth={handleChangeMonth}\n                handleSubmitSetDatePeriodForm={handleSubmitSetDatePeriodForm}\n              />\n            )}\n          </Route>\n          <Route path={`${to.COMPETITIONS}/:id${to.PERIOD}/:dateFromId/:dateToId`}>\n            {isLoading ? (\n              <Preloader />\n            ) : (\n              <CompetitionCalendar\n                calendarData={calendarData}\n                competitionInfo={competitionInfo}\n                getData={getCompetitionDataByDatePeriod}\n                handleChangeSeason={handleChangeSeason}\n                handleChangeMonth={handleChangeMonth}\n                handleSubmitSetDatePeriodForm={handleSubmitSetDatePeriodForm}\n              />\n            )}\n          </Route>\n          <Route path={to.ANY_ROUTE}>\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </main>\n\n      <Footer />\n\n      <ErrorTooltip\n        isErrorTooltipOpened={isErrorTooltipOpened}\n        isServerErrorTooltipOpened={isServerErrorTooltipOpened}\n        onOverlayClick={handleClickOnOverlay}\n        onClose={closeAllPopups}\n      />\n\n      <EmptyDataTooltip\n        isEmptyDataTooltipOpened={isEmptyDataTooltipOpened}\n        hasNoMatchesTooltipOpened={hasNoMatchesTooltipOpened}\n        onOverlayClick={handleClickOnOverlay}\n        onClose={closeAllPopups}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('page'),\n);\n"],"sourceRoot":""}